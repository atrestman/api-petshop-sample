swagger: "2.0"
info:
  description: API for managing distributed PetShop data.
  version: 1.0
  title: Pet Shop
  contact:
    email: atrestman@sesimicgames.com
host: api.petshop.seismicgames.com
basePath: /

tags:
  - name: seller
    description: Information about a pet seller
  - name: address
    description: Information about location of the seller
  - name: pet
    description: Information about a particular pet
schemes:
  - http

############################################################
## API END-POINTS SPECIFICATION
############################################################
paths:

#-----------------------------------------------------------
# Seller End-points
#-----------------------------------------------------------
  /sellers:
    get:
      tags:
      - "seller"
      summary: "List all sellers"
      description: "Returns all sellers"
      operationId: "getSellers"
      produces:
        - "application/json"
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Seller"
        500:
          description: Unexpected error
    post:
      tags:
      - "seller"
      summary: "Add a new seller info"
      operationId: "addSeller"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Seller object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Seller"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Seller"
        422:
          description: Invalid input
        500:
          description: Unexpected error
  /sellers/{sellerId}:
    get:
      tags:
      - "seller"
      summary: "Find seller by ID"
      description: "Returns a seller info"
      operationId: "getSellerById"
      produces:
        - "application/json"
      parameters:
      - name: "sellerId"
        in: "path"
        description: "ID of seller to return"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Seller"
        400:
          description: Invalid ID supplied
        404:
          description: Seller not found
        500:
          description: Unexpected error
    put:
      tags:
      - "seller"
      summary: "Update existing seller by ID"
      operationId: "updateSeller"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
      - name: "sellerId"
        in: "path"
        description: "ID of seller to update"
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "body"
        description: "Seller info object that needs to be updated in the Pet Shop"
        required: true
        schema:
          $ref: "#/definitions/Seller"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Seller"
        400:
          description: Invalid ID supplied
        404:
          description: Seller not found
        405:
          description: Validation exception
        500:
          description: Unexpected error
    delete:
      tags:
      - "seller"
      summary: "Delete seller by ID"
      operationId: "deleteSeller"
      parameters:
      - name: "sellerId"
        in: "path"
        description: "ID of seller to delete"
        required: true
        type: "integer"
        format: "int32"
      responses:
        204:
          description: Successful operation, no content
        400:
          description: Invalid ID supplied
        404:
          description: Seller not found
        500:
          description: Unexpected error

#-----------------------------------------------------------
# Address End-points
#-----------------------------------------------------------

  /addresses:
    get:
      tags:
      - "address"
      summary: "List all address"
      description: "Returns all address"
      operationId: "getAddress"
      produces:
        - "application/json"
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Address"
        500:
          description: Unexpected error
    post:
      tags:
      - "address"
      summary: "Add a new address info"
      operationId: "addAddress"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Address object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Address"
        422:
          description: Invalid input
        500:
          description: Unexpected error
  /addresses/{addressId}:
    get:
      tags:
      - "address"
      summary: "Find address by ID"
      description: "Returns a address info"
      operationId: "getAddressById"
      produces:
        - "application/json"
      parameters:
      - name: "addressId"
        in: "path"
        description: "ID of address to return"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Address"
        400:
          description: Invalid ID supplied
        404:
          description: Address not found
        500:
          description: Unexpected error
    put:
      tags:
      - "address"
      summary: "Update existing address by ID"
      operationId: "updateAddress"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
      - name: "addressId"
        in: "path"
        description: "ID of address to update"
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "body"
        description: "Address info object that needs to be updated in the Pet Shop"
        required: true
        schema:
          $ref: "#/definitions/Address"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Address"
        400:
          description: Invalid ID supplied
        404:
          description: Address not found
        405:
          description: Validation exception
        500:
          description: Unexpected error
    delete:
      tags:
      - "address"
      summary: "Delete address by ID"
      operationId: "deleteAddress"
      parameters:
      - name: "addressId"
        in: "path"
        description: "ID of address to delete"
        required: true
        type: "integer"
        format: "int32"
      responses:
        204:
          description: Successful operation, no content
        400:
          description: Invalid ID supplied
        404:
          description: Address not found
        500:
          description: Unexpected error

#-----------------------------------------------------------
# Pet End-points
#-----------------------------------------------------------

  /pets:
    get:
      tags:
      - "pet"
      summary: "List all pets"
      description: "Returns all pets"
      operationId: "getPets"
      produces:
        - "application/json"
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Pet"
        500:
          description: Unexpected error
  /pets/{petId}:
    get:
      tags:
      - "pet"
      summary: "Find pet by ID"
      description: "Returns a pet info"
      operationId: "getPetById"
      produces:
        - "application/json"
      parameters:
      - name: "petId"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/Pet"
        400:
          description: Invalid ID supplied
        404:
          description: Pet not found
        500:
          description: Unexpected error


############################################################
## GENERAL - DEFINITIONS
############################################################
definitions:

  Seller:
    type: object
    description: "Seller info object"
    properties:
      contactinfoid:
        type: integer
        format: int32
      lastname:
        type: string
      firstname:
        type: string
      email:
        type: string

  Address:
    type: object
    description: "Address object"
    properties:
      addressid:
        type: integer
        format: int32
      street1:
        type: string
      street1:
        type: string
      street2:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      latitude:
        type: number
        format: float
      longtitude:
        type: number
        format: float

  Category:
    type: object
    description: "Category object"
    properties:
      categoryid:
        type: string
      name:
        type: string
      description:
        type: string
      imageurl:
        type: string

  Product:
    type: object
    description: "Product object"
    properties:
      productid:
        type: string
      name:
        type: string
      description:
        type: string
      imageurl:
        type: string
      category:
        type: object
        $ref: '#/definitions/Category'

  Pet:
    type: object
    description: "Pet object"
    properties:
      petid:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      imageurl:
        type: string
      imagethumburl:
        type: string
      price:
        type: number
        format: float
      totalscore:
        type: integer
        format: int32
      numberofvotes:
        type: integer
        format: int32
      disabled:
        type: integer
        format: int32
      seller:
        type: object
        $ref: '#/definitions/Seller'
      address:
        type: object
        $ref: '#/definitions/Address'
      product:
        type: object
        $ref: '#/definitions/Product'


